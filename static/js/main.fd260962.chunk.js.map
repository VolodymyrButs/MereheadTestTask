{"version":3,"sources":["Pagination.js","CreateUser.js","EditUser.js","App.js","localStorage.js","index.js"],"names":["PaginationBlock","styled","div","Pagination","list","currentPage","setCurrentPage","usersPerPage","PageCount","Math","ceil","users","length","onClick","FormStyled","form","CreateUser","getUsers","useState","userName","setUserName","userSurname","setUserSurname","userDescription","setUserDescription","onSubmit","e","preventDefault","fetch","method","body","JSON","stringify","name","surname","desc","headers","then","response","type","placeholder","onChange","currentTarget","value","required","EditUser","user","editedUserName","setEditedUserName","editedUserSurname","setEditedUserSurname","editedUserDescription","setEditedUserDescription","isVisibleEditWindow","setIsVisibleEditWindow","console","log","window","confirm","id","ok","defaultValue","UsersWrapper","UserWrapper","App","initState","serializedState","localStorage","getItem","parse","err","error","loadState","useReducer","action","data","Error","dispatch","useEffect","setItem","saveState","json","currentUsers","slice","map","index","key","ReactDOM","render","document","getElementById"],"mappings":"ijBAGA,IAAMA,EAAkBC,IAAOC,IAAV,KAgBRC,EAAa,SAAC,GAKpB,IAJHC,EAIE,EAJFA,KACAC,EAGE,EAHFA,YACAC,EAEE,EAFFA,eACAC,EACE,EADFA,aAEMC,EAAYC,KAAKC,KAAKN,EAAKO,MAAMC,OAASL,GAchD,OACI,oCACKC,EAAY,GACT,kBAACR,EAAD,KACI,6BACI,4BAAQa,QAZX,WAETP,EADgB,IAAhBD,EACeG,EAEAH,EAAc,KAQjB,WACA,8BACKA,EADL,IACmBG,GAEnB,4BAAQK,QAtBX,WACb,OACWP,EADPD,IAAgBG,EACM,EAEJH,EAAc,KAkBpB,e,gjBC7CjB,IAAMS,EAAab,IAAOc,KAAV,KAuBVC,EAAa,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACRC,mBAAS,IADD,mBACjCC,EADiC,KACvBC,EADuB,OAEFF,mBAAS,IAFP,mBAEjCG,EAFiC,KAEpBC,EAFoB,OAGMJ,mBAAS,IAHf,mBAGjCK,EAHiC,KAGhBC,EAHgB,KAgCxC,OACI,kBAACV,EAAD,CAAYW,SAlBS,SAACC,GACtBA,EAAEC,iBACFC,MAAM,0EAEF,CACIC,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CACjBC,KAAMd,EACNe,QAASb,EACTc,KAAMZ,IAEVa,QAAS,CACL,eAAgB,sBAG1BC,MAAK,SAACC,GAAD,OAAcA,GAAYrB,SAI7B,2CACA,2BACIsB,KAAK,OACLN,KAAK,OACLO,YAAY,aACZC,SAlCiB,SAACf,GAC1BN,EAAYM,EAAEgB,cAAcC,QAkCpBC,UAAQ,IAEZ,2BACIL,KAAK,OACLN,KAAK,UACLO,YAAY,gBACZC,SAtCc,SAACf,GACvBJ,EAAeI,EAAEgB,cAAcC,QAsCvBC,UAAQ,IAEZ,2BACIL,KAAK,OACLN,KAAK,OACLO,YAAY,aACZC,SA1CkB,SAACf,GAC3BF,EAAmBE,EAAEgB,cAAcC,QA0C3BC,UAAQ,IAEZ,4BAAQL,KAAK,UAAb,iBC9ECM,EAAW,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,KAAM7B,EAAe,EAAfA,SAAe,EACAC,mBAAS,IADT,mBACrC6B,EADqC,KACrBC,EADqB,OAEM9B,mBAAS,IAFf,mBAErC+B,EAFqC,KAElBC,EAFkB,OAGchC,mBAAS,IAHvB,mBAGrCiC,EAHqC,KAGdC,EAHc,OAIUlC,oBAAS,GAJnB,mBAIrCmC,EAJqC,KAIhBC,EAJgB,KAK5CC,QAAQC,IAAIV,GA+CZ,OACI,qCACMO,GACE,oCACI,4BAAQxC,QAAS,WAxCjB4C,OAAOC,QAAQ,YAEvB9B,MAAM,0EAAD,OACyEkB,EAAKa,IAC/E,CACI9B,OAAQ,SACRO,QAAS,CACL,eAAgB,sBAG1BC,MAAK,SAACC,GACJA,EAASsB,IAAM3C,SA6BX,eAGA,4BACIJ,QAAS,WACLmC,EAAkBF,EAAKb,MACvBiB,EAAqBJ,EAAKZ,SAC1BkB,EAAyBN,EAAKX,MAC9BmB,GAAuB,KAL/B,cAaPD,GACG,kBAACvC,EAAD,CAAYW,SA1CA,SAACC,GACrBA,EAAEC,iBACFC,MAAM,0EAAD,OACyEkB,EAAKa,IAC/E,CACI9B,OAAQ,MACRC,KAAMC,KAAKC,UAAU,CACjBC,KAAMc,EACNb,QAASe,EACTd,KAAMgB,IAEVf,QAAS,CACL,eAAgB,sBAG1BC,MAAK,SAACC,GACJA,GAAYrB,IACZqB,GAAYgB,GAAuB,QA0B3B,yCACA,2BACIf,KAAK,OACLN,KAAK,OACLO,YAAY,aACZqB,aAAcd,EACdN,SA1Ea,SAACf,GAC9BsB,EAAkBtB,EAAEgB,cAAcC,QA0ElBC,UAAQ,IAEZ,2BACIL,KAAK,OACLN,KAAK,UACLO,YAAY,gBACZqB,aAAcZ,EACdR,SA/EU,SAACf,GAC3BwB,EAAqBxB,EAAEgB,cAAcC,QA+ErBC,UAAQ,IAEZ,2BACIL,KAAK,OACLN,KAAK,OACLO,YAAY,aACZqB,aAAcV,EACdV,SApFc,SAACf,GAC/B0B,EAAyB1B,EAAEgB,cAAcC,QAoFzBC,UAAQ,IAEZ,4BAAQL,KAAK,UAAb,aACCc,GACG,4BAAQxC,QAAS,kBAAMyC,GAAuB,KAA9C,kB,scCjGxB,IAAMQ,EAAe7D,IAAOC,IAAV,KAMZ6D,EAAc9D,IAAOC,IAAV,KAiFF8D,EAlEH,WACR,IAAMC,EC9Be,WACrB,IACI,IAAMC,EAAkBC,aAAaC,QAAQ,SAC7C,OAAwB,OAApBF,EACO,CAAEvD,MAAO,IAEboB,KAAKsC,MAAMH,GACpB,MAAOI,GAEL,OADAf,QAAQgB,MAAMD,GACP,IDqBOE,GADJ,MAYWC,sBAVzB,SAAiB9D,EAAO+D,GACpB,OAAQA,EAAOnC,MACX,IAAK,MACD,MAAO,CACH5B,MAAO+D,EAAOC,MAEtB,QACI,MAAM,IAAIC,SAGuBX,GAZ/B,mBAYP7D,EAZO,KAYDyE,EAZC,KAadC,qBAAU,YC7BW,SAACnE,GACtB,IACI,IAAMuD,EAAkBnC,KAAKC,UAAUrB,GACvCwD,aAAaY,QAAQ,QAASb,GAChC,MAAOI,GAELf,QAAQC,IAAIc,IDwBZU,CAAU5E,KACX,CAACA,IAEJ,IAAMa,EAAW,WACbW,MAAM,2EAGDS,MAAK,SAACC,GAAD,OAAcA,EAAS2C,UAC5B5C,MAAK,SAACsC,GACHE,EAAS,CACLtC,KAAM,MACNoC,aAIhBG,qBAAU,WACN7D,MACD,IA/BW,MAgCwBC,mBAAS,GAhCjC,mBAgCPb,EAhCO,KAgCMC,EAhCN,KAmCR4E,EAAe9E,EAAKO,MAAMwE,MAFX,GAGhB9E,EAAc,GAHE,EAIjBA,GAEJ,OACI,oCACI,kBAAC,EAAD,CAAYY,SAAUA,IACtB,kBAAC,EAAD,CACIb,KAAMA,EACNC,YAAaA,EACbC,eAAgBA,EAChBC,aAbS,IAeb,kBAACuD,EAAD,KACKoB,EAAaE,KAAI,SAACtC,EAAMuC,GACrB,OACI,kBAACtB,EAAD,CAAauB,IAAKD,GACd,oCAAUvC,EAAKb,MACf,uCAAaa,EAAKZ,SAElB,2CAAiBY,EAAKX,MAEtB,kBAAC,EAAD,CAAUW,KAAMA,EAAM7B,SAAUA,WEjF5DsE,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.fd260962.chunk.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\n\nconst PaginationBlock = styled.div`\n    display: flex;\n    justify-content: center;\n    div {\n        display: flex;\n        width: 100px;\n\n        justify-content: space-around;\n        align-items: center;\n    }\n    button {\n        height: 30px;\n        border-radius: 100%;\n        line-height: 14px;\n    }\n`\nexport const Pagination = ({\n    list,\n    currentPage,\n    setCurrentPage,\n    usersPerPage,\n}) => {\n    const PageCount = Math.ceil(list.users.length / usersPerPage)\n    const nextPage = () => {\n        if (currentPage === PageCount) {\n            return setCurrentPage(1)\n        }\n        return setCurrentPage(currentPage + 1)\n    }\n    const prevPage = () => {\n        if (currentPage === 1) {\n            setCurrentPage(PageCount)\n        } else {\n            setCurrentPage(currentPage - 1)\n        }\n    }\n    return (\n        <>\n            {PageCount > 1 && (\n                <PaginationBlock>\n                    <div>\n                        <button onClick={prevPage}> &larr;</button>\n                        <span>\n                            {currentPage}/{PageCount}\n                        </span>\n                        <button onClick={nextPage}> &rarr;</button>\n                    </div>\n                </PaginationBlock>\n            )}\n        </>\n    )\n}\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\n\nexport const FormStyled = styled.form`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    flex-grow: 0;\n    justify-content: center;\n    border: 1px solid black;\n    border-radius: 15px;\n    margin: 10px;\n    padding: 10px;\n    background-color: lightgray;\n    input,\n    button {\n        margin: 10px;\n        padding: 5px 10px;\n        font-weight: bold;\n        border-radius: 10px;\n        outline: none;\n    }\n    @media (min-width: 860px) {\n        flex-direction: row;\n    }\n`\nexport const CreateUser = ({ getUsers }) => {\n    const [userName, setUserName] = useState('')\n    const [userSurname, setUserSurname] = useState('')\n    const [userDescription, setUserDescription] = useState('')\n\n    const handleUserNameChange = (e) => {\n        setUserName(e.currentTarget.value)\n    }\n    const handleUserSurname = (e) => {\n        setUserSurname(e.currentTarget.value)\n    }\n    const handleUserDescription = (e) => {\n        setUserDescription(e.currentTarget.value)\n    }\n\n    const handleCreateUser = (e) => {\n        e.preventDefault()\n        fetch(\n            `https://cors-anywhere.herokuapp.com/http://77.120.241.80:8911/api/users`,\n            {\n                method: 'POST',\n                body: JSON.stringify({\n                    name: userName,\n                    surname: userSurname,\n                    desc: userDescription,\n                }),\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n            }\n        ).then((response) => response && getUsers())\n    }\n    return (\n        <FormStyled onSubmit={handleCreateUser}>\n            <h3>Create user</h3>\n            <input\n                type=\"text\"\n                name=\"name\"\n                placeholder=\"input name\"\n                onChange={handleUserNameChange}\n                required\n            />\n            <input\n                type=\"text\"\n                name=\"surname\"\n                placeholder=\"input surname\"\n                onChange={handleUserSurname}\n                required\n            />\n            <input\n                type=\"text\"\n                name=\"desc\"\n                placeholder=\"input desc\"\n                onChange={handleUserDescription}\n                required\n            />\n            <button type=\"submit\">Create user</button>\n        </FormStyled>\n    )\n}\n","import React, { useState } from 'react'\n\nimport { FormStyled } from './CreateUser'\n\nexport const EditUser = ({ user, getUsers }) => {\n    const [editedUserName, setEditedUserName] = useState('')\n    const [editedUserSurname, setEditedUserSurname] = useState('')\n    const [editedUserDescription, setEditedUserDescription] = useState('')\n    const [isVisibleEditWindow, setIsVisibleEditWindow] = useState(false)\n    console.log(user)\n    const handleEditUserNameChange = (e) => {\n        setEditedUserName(e.currentTarget.value)\n    }\n    const handleEditUserSurname = (e) => {\n        setEditedUserSurname(e.currentTarget.value)\n    }\n    const handleEditUserDescription = (e) => {\n        setEditedUserDescription(e.currentTarget.value)\n    }\n    const handlerDeleteUser = () => {\n        const del = window.confirm('Delete?')\n        del &&\n            fetch(\n                `https://cors-anywhere.herokuapp.com/http://77.120.241.80:8911/api/user/${user.id}`,\n                {\n                    method: 'DELETE',\n                    headers: {\n                        'Content-Type': 'application/json',\n                    },\n                }\n            ).then((response) => {\n                response.ok && getUsers()\n            })\n    }\n\n    const handlerEditUser = (e) => {\n        e.preventDefault()\n        fetch(\n            `https://cors-anywhere.herokuapp.com/http://77.120.241.80:8911/api/user/${user.id}`,\n            {\n                method: 'PUT',\n                body: JSON.stringify({\n                    name: editedUserName,\n                    surname: editedUserSurname,\n                    desc: editedUserDescription,\n                }),\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n            }\n        ).then((response) => {\n            response && getUsers()\n            response && setIsVisibleEditWindow(false)\n        })\n    }\n\n    return (\n        <>\n            {!isVisibleEditWindow && (\n                <>\n                    <button onClick={() => handlerDeleteUser()}>\n                        Delete user\n                    </button>\n                    <button\n                        onClick={() => {\n                            setEditedUserName(user.name)\n                            setEditedUserSurname(user.surname)\n                            setEditedUserDescription(user.desc)\n                            setIsVisibleEditWindow(true)\n                        }}\n                    >\n                        Edit user\n                    </button>\n                </>\n            )}\n\n            {isVisibleEditWindow && (\n                <FormStyled onSubmit={handlerEditUser}>\n                    <h3>Edit user</h3>\n                    <input\n                        type=\"text\"\n                        name=\"name\"\n                        placeholder=\"input name\"\n                        defaultValue={editedUserName}\n                        onChange={handleEditUserNameChange}\n                        required\n                    />\n                    <input\n                        type=\"text\"\n                        name=\"surname\"\n                        placeholder=\"input surname\"\n                        defaultValue={editedUserSurname}\n                        onChange={handleEditUserSurname}\n                        required\n                    />\n                    <input\n                        type=\"text\"\n                        name=\"desc\"\n                        placeholder=\"input desc\"\n                        defaultValue={editedUserDescription}\n                        onChange={handleEditUserDescription}\n                        required\n                    />\n                    <button type=\"submit\">Edit user</button>\n                    {isVisibleEditWindow && (\n                        <button onClick={() => setIsVisibleEditWindow(false)}>\n                            Cancel edit\n                        </button>\n                    )}\n                </FormStyled>\n            )}\n        </>\n    )\n}\n","import React, { useEffect, useReducer, useState } from 'react'\nimport styled from 'styled-components'\n\nimport { Pagination } from './Pagination'\nimport { CreateUser } from './CreateUser'\nimport { EditUser } from './EditUser'\nimport { loadState, saveState } from './localStorage'\n\nconst UsersWrapper = styled.div`\n    display: flex;\n    justify-content: center;\n    flex-wrap: wrap;\n`\n\nconst UserWrapper = styled.div`\n    border: 1px solid black;\n    border-radius: 15px;\n    margin: 10px;\n    padding: 10px;\n    button,\n    p,\n    span {\n        margin: 10px;\n        padding: 5px 10px;\n        border-radius: 10px;\n        outline: none;\n    }\n`\n\nconst App = () => {\n    const initState = loadState()\n    function reducer(users, action) {\n        switch (action.type) {\n            case 'add':\n                return {\n                    users: action.data,\n                }\n            default:\n                throw new Error()\n        }\n    }\n    const [list, dispatch] = useReducer(reducer, initState)\n    useEffect(() => {\n        saveState(list)\n    }, [list])\n\n    const getUsers = () => {\n        fetch(\n            `https://cors-anywhere.herokuapp.com/http://77.120.241.80:8911/api/users`\n        )\n            .then((response) => response.json())\n            .then((data) => {\n                dispatch({\n                    type: 'add',\n                    data,\n                })\n            })\n    }\n    useEffect(() => {\n        getUsers()\n    }, [])\n    const [currentPage, setCurrentPage] = useState(1)\n    const usersPerPage = 5\n\n    const currentUsers = list.users.slice(\n        (currentPage - 1) * usersPerPage,\n        currentPage * usersPerPage\n    )\n    return (\n        <>\n            <CreateUser getUsers={getUsers} />\n            <Pagination\n                list={list}\n                currentPage={currentPage}\n                setCurrentPage={setCurrentPage}\n                usersPerPage={usersPerPage}\n            />\n            <UsersWrapper>\n                {currentUsers.map((user, index) => {\n                    return (\n                        <UserWrapper key={index}>\n                            <p>Name: {user.name}</p>\n                            <p>Surname: {user.surname}</p>\n\n                            <p>Description: {user.desc}</p>\n\n                            <EditUser user={user} getUsers={getUsers} />\n                        </UserWrapper>\n                    )\n                })}\n            </UsersWrapper>\n        </>\n    )\n}\n\nexport default App\n","export const loadState = () => {\n    try {\n        const serializedState = localStorage.getItem('users')\n        if (serializedState === null) {\n            return { users: [] }\n        }\n        return JSON.parse(serializedState)\n    } catch (err) {\n        console.error(err)\n        return {}\n    }\n}\n\nexport const saveState = (users) => {\n    try {\n        const serializedState = JSON.stringify(users)\n        localStorage.setItem('users', serializedState)\n    } catch (err) {\n        // eslint-disable-next-line no-console\n        console.log(err)\n    }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}